#include <touchgfx/Font.hpp>

#ifndef NO_USING_NAMESPACE_TOUCHGFX
using namespace touchgfx;
#endif

FONT_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_trebuc_32_4bpp[] FONT_LOCATION_FLASH_ATTRIBUTE = {
    {0x0041, -2},  // (First char = [0x0041, ], Second char = [0x0020, ], Kerning dist = -2) 
    {0x004C, -1},  // (First char = [0x004C, ], Second char = [0x0020, ], Kerning dist = -1) 
    {0x0050, -1},  // (First char = [0x0050, ], Second char = [0x0020, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0020, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0x0020, ], Kerning dist = -1) 
    {0x0046, -6},  // (First char = [0x0046, ], Second char = [0x002C, ], Kerning dist = -6) 
    {0x0050, -6},  // (First char = [0x0050, ], Second char = [0x002C, ], Kerning dist = -6) 
    {0x0054, -5},  // (First char = [0x0054, ], Second char = [0x002C, ], Kerning dist = -5) 
    {0x0056, -5},  // (First char = [0x0056, ], Second char = [0x002C, ], Kerning dist = -5) 
    {0x0057, -3},  // (First char = [0x0057, ], Second char = [0x002C, ], Kerning dist = -3) 
    {0x0059, -5},  // (First char = [0x0059, ], Second char = [0x002C, ], Kerning dist = -5) 
    {0x0072, -5},  // (First char = [0x0072, ], Second char = [0x002C, ], Kerning dist = -5) 
    {0x0076, -4},  // (First char = [0x0076, ], Second char = [0x002C, ], Kerning dist = -4) 
    {0x0077, -3},  // (First char = [0x0077, ], Second char = [0x002C, ], Kerning dist = -3) 
    {0x0079, -4},  // (First char = [0x0079, ], Second char = [0x002C, ], Kerning dist = -4) 
    {0x0054, -3},  // (First char = [0x0054, ], Second char = [0x002D, ], Kerning dist = -3) 
    {0x0056, -2},  // (First char = [0x0056, ], Second char = [0x002D, ], Kerning dist = -2) 
    {0x0057, -2},  // (First char = [0x0057, ], Second char = [0x002D, ], Kerning dist = -2) 
    {0x0059, -4},  // (First char = [0x0059, ], Second char = [0x002D, ], Kerning dist = -4) 
    {0x0046, -6},  // (First char = [0x0046, ], Second char = [0x002E, ], Kerning dist = -6) 
    {0x0050, -6},  // (First char = [0x0050, ], Second char = [0x002E, ], Kerning dist = -6) 
    {0x0054, -5},  // (First char = [0x0054, ], Second char = [0x002E, ], Kerning dist = -5) 
    {0x0056, -5},  // (First char = [0x0056, ], Second char = [0x002E, ], Kerning dist = -5) 
    {0x0057, -3},  // (First char = [0x0057, ], Second char = [0x002E, ], Kerning dist = -3) 
    {0x0059, -5},  // (First char = [0x0059, ], Second char = [0x002E, ], Kerning dist = -5) 
    {0x0072, -4},  // (First char = [0x0072, ], Second char = [0x002E, ], Kerning dist = -4) 
    {0x0076, -4},  // (First char = [0x0076, ], Second char = [0x002E, ], Kerning dist = -4) 
    {0x0077, -3},  // (First char = [0x0077, ], Second char = [0x002E, ], Kerning dist = -3) 
    {0x0079, -4},  // (First char = [0x0079, ], Second char = [0x002E, ], Kerning dist = -4) 
    {0x0054, -4},  // (First char = [0x0054, ], Second char = [0x003A, ], Kerning dist = -4) 
    {0x0056, -2},  // (First char = [0x0056, ], Second char = [0x003A, ], Kerning dist = -2) 
    {0x0057, -1},  // (First char = [0x0057, ], Second char = [0x003A, ], Kerning dist = -1) 
    {0x0059, -3},  // (First char = [0x0059, ], Second char = [0x003A, ], Kerning dist = -3) 
    {0x0054, -4},  // (First char = [0x0054, ], Second char = [0x003B, ], Kerning dist = -4) 
    {0x0056, -2},  // (First char = [0x0056, ], Second char = [0x003B, ], Kerning dist = -2) 
    {0x0057, -1},  // (First char = [0x0057, ], Second char = [0x003B, ], Kerning dist = -1) 
    {0x0059, -3},  // (First char = [0x0059, ], Second char = [0x003B, ], Kerning dist = -3) 
    {0x0020, -2},  // (First char = [0x0020, ], Second char = [0x0041, ], Kerning dist = -2) 
    {0x0046, -3},  // (First char = [0x0046, ], Second char = [0x0041, ], Kerning dist = -3) 
    {0x0050, -4},  // (First char = [0x0050, ], Second char = [0x0041, ], Kerning dist = -4) 
    {0x0054, -3},  // (First char = [0x0054, ], Second char = [0x0041, ], Kerning dist = -3) 
    {0x0056, -3},  // (First char = [0x0056, ], Second char = [0x0041, ], Kerning dist = -3) 
    {0x0057, -3},  // (First char = [0x0057, ], Second char = [0x0041, ], Kerning dist = -3) 
    {0x0059, -3},  // (First char = [0x0059, ], Second char = [0x0041, ], Kerning dist = -3) 
    {0x0054, -2},  // (First char = [0x0054, ], Second char = [0x004F, ], Kerning dist = -2) 
    {0x0020, -1},  // (First char = [0x0020, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x0041, -3},  // (First char = [0x0041, ], Second char = [0x0054, ], Kerning dist = -3) 
    {0x004C, -3},  // (First char = [0x004C, ], Second char = [0x0054, ], Kerning dist = -3) 
    {0x0052, -1},  // (First char = [0x0052, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x0041, -3},  // (First char = [0x0041, ], Second char = [0x0056, ], Kerning dist = -3) 
    {0x004C, -4},  // (First char = [0x004C, ], Second char = [0x0056, ], Kerning dist = -4) 
    {0x0052, -1},  // (First char = [0x0052, ], Second char = [0x0056, ], Kerning dist = -1) 
    {0x0041, -3},  // (First char = [0x0041, ], Second char = [0x0057, ], Kerning dist = -3) 
    {0x004C, -4},  // (First char = [0x004C, ], Second char = [0x0057, ], Kerning dist = -4) 
    {0x0052, -2},  // (First char = [0x0052, ], Second char = [0x0057, ], Kerning dist = -2) 
    {0x0020, -1},  // (First char = [0x0020, ], Second char = [0x0059, ], Kerning dist = -1) 
    {0x0041, -3},  // (First char = [0x0041, ], Second char = [0x0059, ], Kerning dist = -3) 
    {0x004C, -4},  // (First char = [0x004C, ], Second char = [0x0059, ], Kerning dist = -4) 
    {0x0052, -2},  // (First char = [0x0052, ], Second char = [0x0059, ], Kerning dist = -2) 
    {0x0050, -1},  // (First char = [0x0050, ], Second char = [0x0061, ], Kerning dist = -1) 
    {0x0054, -4},  // (First char = [0x0054, ], Second char = [0x0061, ], Kerning dist = -4) 
    {0x0056, -3},  // (First char = [0x0056, ], Second char = [0x0061, ], Kerning dist = -3) 
    {0x0057, -2},  // (First char = [0x0057, ], Second char = [0x0061, ], Kerning dist = -2) 
    {0x0059, -3},  // (First char = [0x0059, ], Second char = [0x0061, ], Kerning dist = -3) 
    {0x0054, -4},  // (First char = [0x0054, ], Second char = [0x0063, ], Kerning dist = -4) 
    {0x004B, -1},  // (First char = [0x004B, ], Second char = [0x0065, ], Kerning dist = -1) 
    {0x0050, -1},  // (First char = [0x0050, ], Second char = [0x0065, ], Kerning dist = -1) 
    {0x0052, -1},  // (First char = [0x0052, ], Second char = [0x0065, ], Kerning dist = -1) 
    {0x0054, -4},  // (First char = [0x0054, ], Second char = [0x0065, ], Kerning dist = -4) 
    {0x0056, -2},  // (First char = [0x0056, ], Second char = [0x0065, ], Kerning dist = -2) 
    {0x0057, -1},  // (First char = [0x0057, ], Second char = [0x0065, ], Kerning dist = -1) 
    {0x0059, -3},  // (First char = [0x0059, ], Second char = [0x0065, ], Kerning dist = -3) 
    {0x0050, -1},  // (First char = [0x0050, ], Second char = [0x0068, ], Kerning dist = -1) 
    {0x004B, -1},  // (First char = [0x004B, ], Second char = [0x0069, ], Kerning dist = -1) 
    {0x0050, -1},  // (First char = [0x0050, ], Second char = [0x0069, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0069, ], Kerning dist = -1) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0x0069, ], Kerning dist = -1) 
    {0x0059, -2},  // (First char = [0x0059, ], Second char = [0x0069, ], Kerning dist = -2) 
    {0x004B, -1},  // (First char = [0x004B, ], Second char = [0x006E, ], Kerning dist = -1) 
    {0x004B, -1},  // (First char = [0x004B, ], Second char = [0x006F, ], Kerning dist = -1) 
    {0x0050, -1},  // (First char = [0x0050, ], Second char = [0x006F, ], Kerning dist = -1) 
    {0x0052, -1},  // (First char = [0x0052, ], Second char = [0x006F, ], Kerning dist = -1) 
    {0x0054, -4},  // (First char = [0x0054, ], Second char = [0x006F, ], Kerning dist = -4) 
    {0x0056, -2},  // (First char = [0x0056, ], Second char = [0x006F, ], Kerning dist = -2) 
    {0x0057, -1},  // (First char = [0x0057, ], Second char = [0x006F, ], Kerning dist = -1) 
    {0x0059, -4},  // (First char = [0x0059, ], Second char = [0x006F, ], Kerning dist = -4) 
    {0x0059, -3},  // (First char = [0x0059, ], Second char = [0x0070, ], Kerning dist = -3) 
    {0x0059, -4},  // (First char = [0x0059, ], Second char = [0x0071, ], Kerning dist = -4) 
    {0x0050, -1},  // (First char = [0x0050, ], Second char = [0x0072, ], Kerning dist = -1) 
    {0x0054, -4},  // (First char = [0x0054, ], Second char = [0x0072, ], Kerning dist = -4) 
    {0x0056, -2},  // (First char = [0x0056, ], Second char = [0x0072, ], Kerning dist = -2) 
    {0x0057, -2},  // (First char = [0x0057, ], Second char = [0x0072, ], Kerning dist = -2) 
    {0x0054, -4},  // (First char = [0x0054, ], Second char = [0x0073, ], Kerning dist = -4) 
    {0x004B, -1},  // (First char = [0x004B, ], Second char = [0x0075, ], Kerning dist = -1) 
    {0x0052, -1},  // (First char = [0x0052, ], Second char = [0x0075, ], Kerning dist = -1) 
    {0x0054, -4},  // (First char = [0x0054, ], Second char = [0x0075, ], Kerning dist = -4) 
    {0x0056, -2},  // (First char = [0x0056, ], Second char = [0x0075, ], Kerning dist = -2) 
    {0x0057, -1},  // (First char = [0x0057, ], Second char = [0x0075, ], Kerning dist = -1) 
    {0x0059, -2},  // (First char = [0x0059, ], Second char = [0x0075, ], Kerning dist = -2) 
    {0x0041, -2},  // (First char = [0x0041, ], Second char = [0x0076, ], Kerning dist = -2) 
    {0x0059, -2},  // (First char = [0x0059, ], Second char = [0x0076, ], Kerning dist = -2) 
    {0x0041, -1},  // (First char = [0x0041, ], Second char = [0x0077, ], Kerning dist = -1) 
    {0x004B, -1},  // (First char = [0x004B, ], Second char = [0x0077, ], Kerning dist = -1) 
    {0x0054, -4},  // (First char = [0x0054, ], Second char = [0x0077, ], Kerning dist = -4) 
    {0x0041, -1},  // (First char = [0x0041, ], Second char = [0x0079, ], Kerning dist = -1) 
    {0x004C, -3},  // (First char = [0x004C, ], Second char = [0x0079, ], Kerning dist = -3) 
    {0x0054, -4},  // (First char = [0x0054, ], Second char = [0x0079, ], Kerning dist = -4) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0x0079, ], Kerning dist = -1) 
    {0x0057, -1},  // (First char = [0x0057, ], Second char = [0x0079, ], Kerning dist = -1) 
};

